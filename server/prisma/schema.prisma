// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

//user model - stores  user info
model User {
  id           String         @id @default(uuid())
  email        String         @unique
  password     String?
  googleId     String?        @unique
  name         String?
  createdAt    DateTime       @default(now())
  updatedAt    DateTime       @updatedAt

  //bidirectional relationship
  journalEntries JournalEntry[]
  moods          Mood[]
  habits         Habit[]


}

//JournalEntry model - stores daily journal entries
model JournalEntry {
  id        String   @id @default(uuid())
  title     String   @default("Untitled Entry")
  content   String
  createdAt DateTime @default(now())
  updatedAt DateTime @default(now())

  //Relationships
  userId String
  user   User   @relation(fields: [userId], references: [id])

  mood   Mood?  @relation("JournalMood", fields: [moodId], references: [id]) // Optional mood
  moodId    String?  @unique
}

//Mood model - tracks daily moods
model Mood {
  id        String   @id @default(uuid())
  value     Int // 0-5 scale (e.g. 5 = happy, 1 = sad, etc.)
  createdAt DateTime @default(now())

  //Relationships
  userId String
  user   User   @relation(fields: [userId], references: [id])
  journalEntry JournalEntry? @relation("JournalMood")

}

//Habit model - tracks daily habits
model Habit {
  id          String   @id @default(uuid())
  title       String
  description String?
  streak      Int      @default(0)
  isActive    Boolean  @default(true)
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  //Relationships
  userId String
  user   User   @relation(fields: [userId], references: [id])

}
